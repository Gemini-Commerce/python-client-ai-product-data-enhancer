# coding: utf-8

"""
    aiproductdataenhancer/service.proto

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: version not set
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class AiproductdataenhancerToneType(str, Enum):
    """
    AiproductdataenhancerToneType
    """

    """
    allowed enum values
    """
    TONE_TYPE_UNKNOWN = 'TONE_TYPE_UNKNOWN'
    TONE_TYPE_FORMAL = 'TONE_TYPE_FORMAL'
    TONE_TYPE_CASUAL = 'TONE_TYPE_CASUAL'
    TONE_TYPE_PERSUASIVE = 'TONE_TYPE_PERSUASIVE'
    TONE_TYPE_INFORMATIVE = 'TONE_TYPE_INFORMATIVE'
    TONE_TYPE_INSPIRATIONAL = 'TONE_TYPE_INSPIRATIONAL'
    TONE_TYPE_AUTHORITATIVE = 'TONE_TYPE_AUTHORITATIVE'
    TONE_TYPE_PLAYFUL = 'TONE_TYPE_PLAYFUL'
    TONE_TYPE_EMPATHETIC = 'TONE_TYPE_EMPATHETIC'
    TONE_TYPE_SALES_ORIENTED = 'TONE_TYPE_SALES_ORIENTED'
    TONE_TYPE_TECHNICAL = 'TONE_TYPE_TECHNICAL'
    TONE_TYPE_SOPHISTICATED = 'TONE_TYPE_SOPHISTICATED'
    TONE_TYPE_URGENT = 'TONE_TYPE_URGENT'
    TONE_TYPE_FRIENDLY = 'TONE_TYPE_FRIENDLY'
    TONE_TYPE_PROFESSIONAL = 'TONE_TYPE_PROFESSIONAL'
    TONE_TYPE_HUMOROUS = 'TONE_TYPE_HUMOROUS'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of AiproductdataenhancerToneType from a JSON string"""
        return cls(json.loads(json_str))


