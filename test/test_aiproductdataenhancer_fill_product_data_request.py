# coding: utf-8

"""
    aiproductdataenhancer/service.proto

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: version not set
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from aiproductdataenhancer.models.aiproductdataenhancer_fill_product_data_request import AiproductdataenhancerFillProductDataRequest

class TestAiproductdataenhancerFillProductDataRequest(unittest.TestCase):
    """AiproductdataenhancerFillProductDataRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AiproductdataenhancerFillProductDataRequest:
        """Test AiproductdataenhancerFillProductDataRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AiproductdataenhancerFillProductDataRequest`
        """
        model = AiproductdataenhancerFillProductDataRequest()
        if include_optional:
            return AiproductdataenhancerFillProductDataRequest(
                tenant_id = '',
                language_code = 'LANGUAGE_CODE_UNKNOWN',
                product_information = aiproductdataenhancer.models.aiproductdataenhancer_product_information.aiproductdataenhancerProductInformation(
                    brand = '', 
                    code = '', 
                    title = '', ),
                product_data_to_fill = [
                    aiproductdataenhancer.models.aiproductdataenhancer_product_data_to_fill.aiproductdataenhancerProductDataToFill(
                        name = '', 
                        value_set = [
                            ''
                            ], 
                        metadata = {
                            'key' : ''
                            }, )
                    ],
                domains_to_include = [
                    ''
                    ],
                domains_to_exclude = [
                    ''
                    ]
            )
        else:
            return AiproductdataenhancerFillProductDataRequest(
        )
        """

    def testAiproductdataenhancerFillProductDataRequest(self):
        """Test AiproductdataenhancerFillProductDataRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
